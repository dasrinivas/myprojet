<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.SCMTrigger>
          <spec>*/5 * * * *</spec>
          <ignorePostCommitHooks>false</ignorePostCommitHooks>
        </hudson.triggers.SCMTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.67">
    <script>

node {
    stage(&apos;Git Checkout&apos;)
    {
        git &apos;https://github.com/dasrinivas/myprojet.git&apos;
    }
def project_path = &apos;jenkins2/jenkins2-course-spring-boot/spring-boot-samples/spring-boot-sample-atmosphere&apos;
    dir(project_path)
    {
        stage(&apos;maven Clean&apos;)
        {
        sh label: &apos;Clean&apos;, script: &apos;mvn clean&apos;
        }
        stage(&apos;maven Compile&apos;)
        {
        sh label: &apos;Compile&apos;, script: &apos;mvn compile&apos;
        }
        stage(&apos;maven Test&apos;)
        {
        sh label: &apos;Test&apos;, script: &apos;mvn test&apos;
        }
        stage(&apos;maven Package&apos;)
        {
        sh label: &apos;package&apos;, script: &apos;mvn package&apos;
        }
        stage(&apos;Archive jar&apos;)
        {
        archive &apos;target/*.jar&apos;
        }
        stage(&apos;Deploy Code into DockerBased Staging Env.&apos;) {
		sh label: &apos;Docker-Compose&apos;, script: &apos;docker-compose up -d --build&apos;
		}
}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>